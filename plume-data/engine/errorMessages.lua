--File generated by preprocessor.lua
--[[This file is part of Plume
PlumeðŸª¶ is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License.
PlumeðŸª¶ is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with PlumeðŸª¶.
If not, see <https://www.gnu.org/licenses/>.
]]

return function(plume)
	local function throwCompilationError(node, message)
		message = plume.error.makeCompilationError(node, message)
		error(message, -1)
	end

	function plume.error.useUnknowVariableError(node, varName)
		local message = string.format("Cannot use variable '%s', it isn't defined in the current scope.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.setUnknowVariableError(node, varName)
		local message = string.format("Cannot set variable '%s', it isn't defined in the current scope.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.setConstantVariableError(node, varName)
		local message = string.format("Cannot set variable '%s', it is a constant.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.letEmptyConstantError(node)
		local message = string.format("Cannot define an empty constant variable.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.letExistingVariableError(node, varName)
		local message = string.format("Cannot define variable '%s', it already exists in the current scope.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.letExistingStaticVariableError(node, varName)
		local message = string.format("Cannot define static variable '%s', it already exists in the current file scope.", varName)
		throwCompilationError(node, message)
	end

	function plume.error.cannotSetCallError(node)
		local message = "Cannot set the result of a call."
		throwCompilationError(node, message)
	end
end
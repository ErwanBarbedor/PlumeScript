/// Test join
@join
  Foo
  Bar
end
/// Output
FooBar
/// End

/// Test join with sep
@join(sep: \n)
  - Foo
  - Bar
end
/// Output
Foo
Bar
/// End

/// Test table
let t = @table
  - Foo
  - Bar
  foo: baz
end
$t[2], $t.foo
/// Output
Bar, baz
/// End

/// Test void
Foo
@void
  Bar
  Baz
end
Foo
/// Output
FooFoo
/// End

/// Test type
$type($table())\n
$type(nib)\n
$type($(1+1))
/// Output
table
string
number
/// End

/// Test seq 1
for x in seq(1, 5)
  $x
end
/// Output
12345
/// End

/// Test seq 2
for x in seq(3)
  $x
end
/// Output
123
/// End

/// Test enumerate
let t = $table(quill, wing, bird)
@join(sep:\n)
  for item in enumerate(t)
    - Item $item.index is $item.value.
  end
end
/// Output
Item 1 is quill.
Item 2 is wing.
Item 3 is bird.
/// End

/// Test items
let t = $table(first: quill, second: wing, bonus: bird)
@join(sep:\n)
  for item in items(t)
    - Item "$item.key" is _($item.value)_.
  end
end
/// Output
Item "first" is _(quill)_.
Item "second" is _(wing)_.
Item "bonus" is _(bird)_.
/// End